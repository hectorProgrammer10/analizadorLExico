Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIGITO
    LEQ
    PLUS

Grammar

Rule 0     S' -> for_loop
Rule 1     for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA EQ statement RBRACE
Rule 2     tipo -> RESERVADA DOT RESERVADA DOT RESERVADA
Rule 3     statement -> LBRACE RESERVADA LPAREN STRING RPAREN SEMICOLON RBRACE

Terminals, with rules where they appear

DIGITO               : 
DOT                  : 1 1 2 2
EQ                   : 1
ID                   : 1
LBRACE               : 1 3
LBRACKET             : 1
LEQ                  : 
LPAREN               : 1 3
PLUS                 : 
RBRACE               : 1 3
RBRACKET             : 1
RESERVADA            : 1 1 1 1 1 1 1 2 2 2 3
RPAREN               : 1 3
SEMICOLON            : 3
STRING               : 3
error                : 

Nonterminals, with rules where they appear

for_loop             : 0
statement            : 1
tipo                 : 

Parsing method: LALR

state 0

    (0) S' -> . for_loop
    (1) for_loop -> . RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA EQ statement RBRACE

    RESERVADA       shift and go to state 2

    for_loop                       shift and go to state 1

state 1

    (0) S' -> for_loop .



state 2

    (1) for_loop -> RESERVADA . ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA EQ statement RBRACE

    ID              shift and go to state 3


state 3

    (1) for_loop -> RESERVADA ID . LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA EQ statement RBRACE

    LBRACE          shift and go to state 4


state 4

    (1) for_loop -> RESERVADA ID LBRACE . RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA EQ statement RBRACE

    RESERVADA       shift and go to state 5


state 5

    (1) for_loop -> RESERVADA ID LBRACE RESERVADA . RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA EQ statement RBRACE

    RESERVADA       shift and go to state 6


state 6

    (1) for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA . LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA EQ statement RBRACE

    LPAREN          shift and go to state 7


state 7

    (1) for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN . RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA EQ statement RBRACE

    RESERVADA       shift and go to state 8


state 8

    (1) for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA . DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA EQ statement RBRACE

    DOT             shift and go to state 9


state 9

    (1) for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT . RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA EQ statement RBRACE

    RESERVADA       shift and go to state 10


state 10

    (1) for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA . LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA EQ statement RBRACE

    LBRACKET        shift and go to state 11


state 11

    (1) for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET . RESERVADA RBRACKET RPAREN DOT RESERVADA EQ statement RBRACE

    RESERVADA       shift and go to state 12


state 12

    (1) for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA . RBRACKET RPAREN DOT RESERVADA EQ statement RBRACE

    RBRACKET        shift and go to state 13


state 13

    (1) for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET . RPAREN DOT RESERVADA EQ statement RBRACE

    RPAREN          shift and go to state 14


state 14

    (1) for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN . DOT RESERVADA EQ statement RBRACE

    DOT             shift and go to state 15


state 15

    (1) for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT . RESERVADA EQ statement RBRACE

    RESERVADA       shift and go to state 16


state 16

    (1) for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA . EQ statement RBRACE

    EQ              shift and go to state 17


state 17

    (1) for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA EQ . statement RBRACE
    (3) statement -> . LBRACE RESERVADA LPAREN STRING RPAREN SEMICOLON RBRACE

    LBRACE          shift and go to state 18

    statement                      shift and go to state 19

state 18

    (3) statement -> LBRACE . RESERVADA LPAREN STRING RPAREN SEMICOLON RBRACE

    RESERVADA       shift and go to state 20


state 19

    (1) for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA EQ statement . RBRACE

    RBRACE          shift and go to state 21


state 20

    (3) statement -> LBRACE RESERVADA . LPAREN STRING RPAREN SEMICOLON RBRACE

    LPAREN          shift and go to state 22


state 21

    (1) for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA EQ statement RBRACE .

    $end            reduce using rule 1 (for_loop -> RESERVADA ID LBRACE RESERVADA RESERVADA LPAREN RESERVADA DOT RESERVADA LBRACKET RESERVADA RBRACKET RPAREN DOT RESERVADA EQ statement RBRACE .)


state 22

    (3) statement -> LBRACE RESERVADA LPAREN . STRING RPAREN SEMICOLON RBRACE

    STRING          shift and go to state 23


state 23

    (3) statement -> LBRACE RESERVADA LPAREN STRING . RPAREN SEMICOLON RBRACE

    RPAREN          shift and go to state 24


state 24

    (3) statement -> LBRACE RESERVADA LPAREN STRING RPAREN . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 25


state 25

    (3) statement -> LBRACE RESERVADA LPAREN STRING RPAREN SEMICOLON . RBRACE

    RBRACE          shift and go to state 26


state 26

    (3) statement -> LBRACE RESERVADA LPAREN STRING RPAREN SEMICOLON RBRACE .

    RBRACE          reduce using rule 3 (statement -> LBRACE RESERVADA LPAREN STRING RPAREN SEMICOLON RBRACE .)

