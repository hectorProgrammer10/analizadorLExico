Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAR
    FLOAT
    INT

Grammar

Rule 0     S' -> program
Rule 1     program -> RESERVADA
Rule 2     program -> RESERVADA comando
Rule 3     comando -> MNUS ID
Rule 4     comando -> SL ID SL ID
Rule 5     comando -> DOT DOT
Rule 6     comando -> MNUS MNUS ID

Terminals, with rules where they appear

CHAR                 : 
DOT                  : 5 5
FLOAT                : 
ID                   : 3 4 4 6
INT                  : 
MNUS                 : 3 6 6
RESERVADA            : 1 2
SL                   : 4 4
error                : 

Nonterminals, with rules where they appear

comando              : 2
program              : 0

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . RESERVADA
    (2) program -> . RESERVADA comando

    RESERVADA       shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> RESERVADA .
    (2) program -> RESERVADA . comando
    (3) comando -> . MNUS ID
    (4) comando -> . SL ID SL ID
    (5) comando -> . DOT DOT
    (6) comando -> . MNUS MNUS ID

    $end            reduce using rule 1 (program -> RESERVADA .)
    MNUS            shift and go to state 4
    SL              shift and go to state 5
    DOT             shift and go to state 6

    comando                        shift and go to state 3

state 3

    (2) program -> RESERVADA comando .

    $end            reduce using rule 2 (program -> RESERVADA comando .)


state 4

    (3) comando -> MNUS . ID
    (6) comando -> MNUS . MNUS ID

    ID              shift and go to state 8
    MNUS            shift and go to state 7


state 5

    (4) comando -> SL . ID SL ID

    ID              shift and go to state 9


state 6

    (5) comando -> DOT . DOT

    DOT             shift and go to state 10


state 7

    (6) comando -> MNUS MNUS . ID

    ID              shift and go to state 11


state 8

    (3) comando -> MNUS ID .

    $end            reduce using rule 3 (comando -> MNUS ID .)


state 9

    (4) comando -> SL ID . SL ID

    SL              shift and go to state 12


state 10

    (5) comando -> DOT DOT .

    $end            reduce using rule 5 (comando -> DOT DOT .)


state 11

    (6) comando -> MNUS MNUS ID .

    $end            reduce using rule 6 (comando -> MNUS MNUS ID .)


state 12

    (4) comando -> SL ID SL . ID

    ID              shift and go to state 13


state 13

    (4) comando -> SL ID SL ID .

    $end            reduce using rule 4 (comando -> SL ID SL ID .)

